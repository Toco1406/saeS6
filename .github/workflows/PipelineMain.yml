name: CI/CD Pipeline Main

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    name: Lint Code with ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run Unit Tests
        run: npm test

  e2e-tests:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Install Playwright dependencies
        run: npx playwright install-deps

      - name: Install xvfb
        run: sudo apt-get install xvfb
      
      - name: Run E2E Tests
        run: xvfb-run npx playwright test --ui

  # migrate-db:
  #   name: Migrate Database
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: Install dependencies
  #       run: npm install

  #     - name: Run Database Migrations
  #       run: npm run migrate

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [lint, unit-tests, e2e-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Deploy Application
        run: npm run deploy

  protect-env:
    name: Protect .env Files
    runs-on: ubuntu-latest
    steps:
      - name: Create .htaccess to block .env access
        run: |
          echo "Creating .htaccess file to block .env access"
          cat > .htaccess << EOF
          <Files ".env">
            Require all denied
          </Files>
          EOF